{"plan":{"plan_id":"a85c0d95-bb74-4fac-befc-e4a6ae6b50b0","task":"Prepare an execution-ready plan to calculate customer LTV for Jan 1, 2023 – Dec 31, 2023 by subscription types, initial plan types, industry, and acquisition channel; produce four markdown tables (total LTV, by plan, by industry, by channel) and a CAC-to-LTV analysis by channel. Use initial subscription/plan (first subscription/plan) for grouping. Churn and LTV formulas as specified by the user. Include toggles for 0%-churn lifetime assumption.","task_result_name":"ltv_calc_plan_v2","steps":{"1":{"step_number":1,"description":"Clarify and confirm assumptions, formulas, required outputs, and column mappings with the user before any data processing.","instructions":"Present and confirm the following assumptions and parameters with the user (explicitly list defaults and allow edits):\n- Analysis period: 2023-01-01 to 2023-12-31 (confirm or change).\n- Cohort definition: \"Customers at the start of the period\" = customers with an active subscription on 2023-01-01. Active if subscription_start_date <= 2023-01-01 AND (subscription_end_date is NULL/empty or subscription_end_date >= 2023-01-01).\n- Use initial subscription type and initial plan type (the subscription/plan the customer first had when they first subscribed) for grouping; if there are no explicit initial fields, infer from the earliest subscription record per customer (confirm which column to use).\n- Revenue & Profit: include only revenue and profit from orders where order_date is between 2023-01-01 and 2023-12-31. Profit per user for LTV should be profit earned by that user during 2023.\n- Churn definition: churned customers = customers from the starting cohort whose subscription_end_date or churn_date falls between 2023-01-01 and 2023-12-31. Do NOT include customers who joined after 2023-01-01 in churn numerator.\n- Churn-rate formula (confirm): churn_rate = churned_customers / customers_at_start. (User-provided formula in prompt was reversed; confirm they intended this or meant churned/customers_at_start.)\n- 0%-churn handling: default assumption = if churned_customers == 0 then assume average lifetime = 5 years (toggleable). Clarify whether the model should convert lifetime to an annual churn rate as churn_rate = 1 / lifetime_years (default 1/5 = 0.2), or treat churn as monthly rate. Default will use annual rates (consistent with ARPU measured annually) unless user asks otherwise.\n- ARPU definition: ARPU = total_revenue_for_group_during_2023 / customers_at_start (only cohort customers). Confirm this.\n- Profit margin: default calculation profit_margin = total_profit_for_group_during_2023 / total_revenue_for_group_during_2023. Confirm whether to instead use profit_per_user directly (profit_per_user / churn_rate) — we will compute both and label which is used.\n- LTV formula: LTV = (ARPU / churn_rate) × profit_margin. Also compute LTV_alt = profit_per_user / churn_rate and present alongside for validation.\n- Outputs: Four markdown tables (total combined subscription types; by plan; by industry; by acquisition channel) and CSVs for each table saved under analysis/. Also a separate CAC vs LTV table by acquisition channel; if CAC not available by subscription type & channel, use total CAC per channel.\n- Filenames/paths for outputs (defaults): analysis/ltv_total.csv, analysis/ltv_by_plan.csv, analysis/ltv_by_industry.csv, analysis/ltv_by_channel.csv, analysis/cac_ltv_by_channel.csv, analysis/ltv_tables.md.\n- Request that the user confirm or provide: file paths for source CSVs (recommended names: data/customers.csv, data/subscriptions.csv, data/orders.csv, data/marketing.csv or data/cac.csv), and column name mappings: customer_id, acquisition_channel, industry, order_date, revenue_amount, profit_amount, subscription_start_date, subscription_end_date, initial_subscription_type (if present), initial_plan_type (if present), churn_date (if present), acquisition_cost (CAC) or marketing_spend with date and channel mapping.\n- Ask whether to include refunds or discounts adjustments in revenue/profit (default: include net revenue/profit as-is from orders dataset).\n- Ask permission to proceed after receiving file paths and column names. Provide an example message the user can reply with to confirm (file paths and a small mapping table).","tool_name":"user_interaction","resultant_artifact_name":"user_confirm_assumptions_and_files","dependant_artifact_names":[]},"2":{"step_number":2,"description":"List CSV files available in the data directory to help the user point to sources.","instructions":"After the user confirms step 1 and provides any missing file paths, run the 'list_data_files' tool to enumerate CSV files present in the data directory. Save the listing for reference and show it to the user so they can choose which files to use.","tool_name":"list_data_files","resultant_artifact_name":"available_data_files_listing","dependant_artifact_names":["user_confirm_assumptions_and_files"]},"3":{"step_number":3,"description":"Get schema and sample for each confirmed input file to map columns exactly.","instructions":"For each file the user confirms (e.g., data/customers.csv, data/subscriptions.csv, data/orders.csv, data/marketing.csv), run 'describe_df' with the exact file path to capture shape, column names, types, and sample values. Save each description as artifacts named description_<filename>.csv (e.g., description_customers_csv). If the user provides different paths, use those exact paths.","tool_name":"describe_df","resultant_artifact_name":"input_files_descriptions","dependant_artifact_names":["available_data_files_listing"]},"4":{"step_number":4,"description":"Create starting_cohort CSV (atomic) containing customers active on 2023-01-01 with their initial subscription & plan.","instructions":"Using the subscriptions file identified in step 3, run a script that: (a) identifies the earliest subscription record per customer to determine initial_subscription_type and initial_plan_type (save these fields), (b) filters customers with an active subscription on 2023-01-01 where subscription_start_date <= 2023-01-01 and (subscription_end_date is NULL or subscription_end_date >= 2023-01-01), (c) outputs analysis/starting_cohort.csv with columns: customer_id, initial_subscription_type, initial_plan_type, industry, acquisition_channel, subscription_start_date, subscription_end_date, initial_subscription_date. Use ISO dates (YYYY-MM-DD).","tool_name":"user_interaction","resultant_artifact_name":"analysis_starting_cohort_csv","dependant_artifact_names":["input_files_descriptions","user_confirm_assumptions_and_files"]},"5":{"step_number":5,"description":"Aggregate revenue and profit per customer for orders in 2023 (atomic).","instructions":"Using the orders/payments file from step 3, filter orders where order_date between 2023-01-01 and 2023-12-31 inclusive. Group by customer_id and compute: total_revenue_2023, total_profit_2023, orders_count_2023. Save CSV to analysis/customer_revenue_profit_2023.csv with columns: customer_id,total_revenue_2023,total_profit_2023,orders_count_2023. If profit column missing, compute profit as revenue * assumed_profit_margin if user provides it; otherwise request it.","tool_name":"user_interaction","resultant_artifact_name":"analysis_customer_revenue_profit_2023_csv","dependant_artifact_names":["input_files_descriptions","user_confirm_assumptions_and_files"]},"6":{"step_number":6,"description":"Determine churned customers among the starting cohort during 2023 and create churn counts by groups (atomic).","instructions":"From analysis/starting_cohort.csv, identify customers whose subscription_end_date or churn_date is between 2023-01-01 and 2023-12-31. Create a CSV analysis/churn_counts_2023.csv with counts aggregated by grouping keys needed: initial_subscription_type, initial_plan_type, industry, acquisition_channel, and overall total. Include columns: group_key_1,...,customers_at_start,churned_customers.","tool_name":"user_interaction","resultant_artifact_name":"analysis_churn_counts_2023_csv","dependant_artifact_names":["analysis_starting_cohort_csv"]},"7":{"step_number":7,"description":"Compute ARPU and profit_per_user for each grouping (atomic).","instructions":"Join analysis/starting_cohort.csv with analysis/customer_revenue_profit_2023.csv (left join on customer_id so customers with zero orders get zero revenue/profit). For groupings below compute for each group: customers_at_start (count), total_revenue_2023, total_profit_2023, ARPU = total_revenue_2023 / customers_at_start, profit_per_user = total_profit_2023 / customers_at_start. Produce CSVs: analysis/agg_by_subscription_type.csv (monthly, annual, combined total), analysis/agg_by_plan.csv (basic, pro, enterprise), analysis/agg_by_industry.csv, analysis/agg_by_channel.csv. Include a column customers_list_sample (optional file with sample customer_ids) for auditing.","tool_name":"user_interaction","resultant_artifact_name":"analysis_arpu_profit_by_group_csvs","dependant_artifact_names":["analysis_starting_cohort_csv","analysis_customer_revenue_profit_2023_csv"]},"8":{"step_number":8,"description":"Compute churn rates per group with 0%-churn handling (atomic).","instructions":"Using analysis/churn_counts_2023.csv and the aggregation outputs from step 7, compute churn_rate = churned_customers / customers_at_start for each group. If churned_customers == 0 and user confirmed default lifetime conversion to churn_rate = 1 / lifetime_years (default lifetime_years = 5), apply that. Save analysis/churn_rate_by_group.csv with columns: group_keys, customers_at_start, churned_customers, churn_rate, lifetime_years_used (NULL if computed from churned_customers), note_on_zero_churn_applied (True/False).","tool_name":"user_interaction","resultant_artifact_name":"analysis_churn_rate_by_group_csv","dependant_artifact_names":["analysis_churn_counts_2023_csv","analysis_arpu_profit_by_group_csvs","user_confirm_assumptions_and_files"]},"9":{"step_number":9,"description":"Calculate LTV per group and prepare CAC vs LTV analysis (atomic).","instructions":"For each group compute: profit_margin = total_profit_2023 / total_revenue_2023 (if total_revenue_2023 == 0 set profit_margin = 0 and annotate). Then compute LTV_primary = (ARPU / churn_rate) * profit_margin. Also compute LTV_alt = profit_per_user / churn_rate. Save combined results to analysis/ltv_by_group.csv with columns: group_keys, customers_at_start, total_revenue_2023, total_profit_2023, ARPU, profit_per_user, churn_rate, lifetime_years_used, profit_margin, LTV_primary, LTV_alt. For CAC to LTV: use marketing/CAC input file (if provided, else request it). Compute CAC_by_channel (sum spend / acquisitions) and compute CAC_to_LTV_ratio per channel. Save analysis/cac_ltv_by_channel.csv. If CAC by subscription type & channel exists, compute CAC_to_LTV at that granularity; otherwise compare channel-level CAC to group LTVs.","tool_name":"user_interaction","resultant_artifact_name":"analysis_ltv_and_cac_csvs","dependant_artifact_names":["analysis_churn_rate_by_group_csv","analysis_arpu_profit_by_group_csvs","input_files_descriptions"]},"10":{"step_number":10,"description":"Export final markdown tables and CSVs for delivery (atomic).","instructions":"Create the four markdown tables (Total Customer LTV; Customer LTV by Plan; Customer LTV by Industry; Customer LTV by Channel) and include a short assumptions section at the top describing: formulas used, 0%-churn lifetime default (and how to change it), ARPU/profit definitions, churn definition, and file/column mappings. Save markdown as analysis/ltv_tables.md and save CSVs: analysis/ltv_total.csv, analysis/ltv_by_plan.csv, analysis/ltv_by_industry.csv, analysis/ltv_by_channel.csv, analysis/cac_ltv_by_channel.csv. Ensure all files are CSV with ISO dates and numeric fields formatted to two decimals. Provide a README text file analysis/README_LTV.md describing how to re-run the steps and toggle the lifetime assumption.","tool_name":"user_interaction","resultant_artifact_name":"analysis_exported_markdown_and_csvs","dependant_artifact_names":["analysis_ltv_and_cac_csvs"]}},"can_execute":true},"mode":"plan","artifacts":{"a85c0d95-bb74-4fac-befc-e4a6ae6b50b0":{}},"current_step":1,"dirs":{"thread_dir":"/Users/hamza/dev/finn2/workspaces/session/threads/1","workspace_dir":"workspaces/session","analysis_dir":"/Users/hamza/dev/finn2/workspaces/session/threads/1/analysis","results_dir":"/Users/hamza/dev/finn2/workspaces/session/threads/1/results","data_dir":"workspaces/session/data"}}